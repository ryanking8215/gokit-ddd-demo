// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ordersvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ID struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{1}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Order struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Userid               int64    `protobuf:"varint,2,opt,name=userid,proto3" json:"userid,omitempty"`
	Product              string   `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{2}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *Order) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

type FindReply struct {
	Order                []*Order `protobuf:"bytes,1,rep,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindReply) Reset()         { *m = FindReply{} }
func (m *FindReply) String() string { return proto.CompactTextString(m) }
func (*FindReply) ProtoMessage()    {}
func (*FindReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{3}
}

func (m *FindReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindReply.Unmarshal(m, b)
}
func (m *FindReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindReply.Marshal(b, m, deterministic)
}
func (m *FindReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindReply.Merge(m, src)
}
func (m *FindReply) XXX_Size() int {
	return xxx_messageInfo_FindReply.Size(m)
}
func (m *FindReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindReply proto.InternalMessageInfo

func (m *FindReply) GetOrder() []*Order {
	if m != nil {
		return m.Order
	}
	return nil
}

type GetReply struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReply) Reset()         { *m = GetReply{} }
func (m *GetReply) String() string { return proto.CompactTextString(m) }
func (*GetReply) ProtoMessage()    {}
func (*GetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5413b25c9125772, []int{4}
}

func (m *GetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReply.Unmarshal(m, b)
}
func (m *GetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReply.Marshal(b, m, deterministic)
}
func (m *GetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReply.Merge(m, src)
}
func (m *GetReply) XXX_Size() int {
	return xxx_messageInfo_GetReply.Size(m)
}
func (m *GetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetReply proto.InternalMessageInfo

func (m *GetReply) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*ID)(nil), "pb.ID")
	proto.RegisterType((*Order)(nil), "pb.Order")
	proto.RegisterType((*FindReply)(nil), "pb.FindReply")
	proto.RegisterType((*GetReply)(nil), "pb.GetReply")
}

func init() { proto.RegisterFile("ordersvc.proto", fileDescriptor_c5413b25c9125772) }

var fileDescriptor_c5413b25c9125772 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x49, 0xd2, 0x5d, 0xbb, 0xa3, 0xf6, 0x30, 0x88, 0x04, 0x45, 0x5c, 0x72, 0x5a, 0x50,
	0xf6, 0xd0, 0xbe, 0x42, 0x6d, 0xd9, 0x93, 0x10, 0x9f, 0xc0, 0xdd, 0xe4, 0xb0, 0x20, 0x4d, 0x98,
	0x4d, 0x0b, 0xbe, 0xbd, 0x64, 0x6c, 0x15, 0xb4, 0xa7, 0xc9, 0x9f, 0xf9, 0xf8, 0xbf, 0x10, 0x58,
	0x04, 0x72, 0x9e, 0xa6, 0xc3, 0xd0, 0x46, 0x0a, 0x29, 0xa0, 0x8c, 0xbd, 0x59, 0x41, 0xf1, 0x42,
	0x14, 0x08, 0x11, 0x66, 0x43, 0x70, 0x5e, 0x8b, 0x5a, 0x34, 0x85, 0xe5, 0x33, 0xde, 0x42, 0x49,
	0xfe, 0x7d, 0x0a, 0x3b, 0x2d, 0x6b, 0xd1, 0x54, 0xf6, 0x98, 0xcc, 0x0d, 0xc8, 0x6e, 0x8d, 0x0b,
	0x90, 0xa3, 0x63, 0x5e, 0x59, 0x39, 0x3a, 0xd3, 0x41, 0xf1, 0x9a, 0x05, 0x7f, 0x17, 0xb9, 0x66,
	0x3f, 0x79, 0x1a, 0x1d, 0xd7, 0x28, 0x7b, 0x4c, 0xa8, 0xe1, 0x22, 0x52, 0x70, 0xfb, 0x21, 0x69,
	0xc5, 0xfd, 0xa7, 0x68, 0x9e, 0xa1, 0xda, 0x8c, 0x3b, 0x67, 0x7d, 0xfc, 0xf8, 0xc4, 0x47, 0x28,
	0xf8, 0xe1, 0x5a, 0xd4, 0xaa, 0xb9, 0x5c, 0x56, 0x6d, 0xec, 0x5b, 0x16, 0xd9, 0xef, 0x7b, 0xf3,
	0x04, 0xf3, 0xad, 0x4f, 0xff, 0x60, 0x71, 0x0e, 0x5e, 0x6e, 0x60, 0xce, 0xf9, 0xed, 0x30, 0xe0,
	0x03, 0xcc, 0xb2, 0x06, 0xcb, 0x4c, 0x75, 0xeb, 0xbb, 0xeb, 0x3c, 0x7f, 0xc5, 0xf7, 0xa0, 0xb6,
	0x3e, 0xfd, 0x6c, 0xaf, 0xf2, 0x3c, 0x89, 0xfa, 0x92, 0xff, 0x70, 0xf5, 0x15, 0x00, 0x00, 0xff,
	0xff, 0x6c, 0xc9, 0x90, 0x04, 0x55, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderSvcClient is the client API for OrderSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderSvcClient interface {
	Find(ctx context.Context, in *ID, opts ...grpc.CallOption) (*FindReply, error)
	Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetReply, error)
}

type orderSvcClient struct {
	cc *grpc.ClientConn
}

func NewOrderSvcClient(cc *grpc.ClientConn) OrderSvcClient {
	return &orderSvcClient{cc}
}

func (c *orderSvcClient) Find(ctx context.Context, in *ID, opts ...grpc.CallOption) (*FindReply, error) {
	out := new(FindReply)
	err := c.cc.Invoke(ctx, "/pb.OrderSvc/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderSvcClient) Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := c.cc.Invoke(ctx, "/pb.OrderSvc/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderSvcServer is the server API for OrderSvc service.
type OrderSvcServer interface {
	Find(context.Context, *ID) (*FindReply, error)
	Get(context.Context, *ID) (*GetReply, error)
}

// UnimplementedOrderSvcServer can be embedded to have forward compatible implementations.
type UnimplementedOrderSvcServer struct {
}

func (*UnimplementedOrderSvcServer) Find(ctx context.Context, req *ID) (*FindReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedOrderSvcServer) Get(ctx context.Context, req *ID) (*GetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterOrderSvcServer(s *grpc.Server, srv OrderSvcServer) {
	s.RegisterService(&_OrderSvc_serviceDesc, srv)
}

func _OrderSvc_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderSvc/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).Find(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderSvc_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderSvcServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrderSvc/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderSvcServer).Get(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.OrderSvc",
	HandlerType: (*OrderSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Find",
			Handler:    _OrderSvc_Find_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _OrderSvc_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ordersvc.proto",
}
