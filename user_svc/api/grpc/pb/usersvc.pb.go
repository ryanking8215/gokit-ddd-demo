// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ordersvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ID struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{1}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FindReply struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindReply) Reset()         { *m = FindReply{} }
func (m *FindReply) String() string { return proto.CompactTextString(m) }
func (*FindReply) ProtoMessage()    {}
func (*FindReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{3}
}

func (m *FindReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindReply.Unmarshal(m, b)
}
func (m *FindReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindReply.Marshal(b, m, deterministic)
}
func (m *FindReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindReply.Merge(m, src)
}
func (m *FindReply) XXX_Size() int {
	return xxx_messageInfo_FindReply.Size(m)
}
func (m *FindReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindReply proto.InternalMessageInfo

func (m *FindReply) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type GetReply struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReply) Reset()         { *m = GetReply{} }
func (m *GetReply) String() string { return proto.CompactTextString(m) }
func (*GetReply) ProtoMessage()    {}
func (*GetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11b3307f9b338e4, []int{4}
}

func (m *GetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReply.Unmarshal(m, b)
}
func (m *GetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReply.Marshal(b, m, deterministic)
}
func (m *GetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReply.Merge(m, src)
}
func (m *GetReply) XXX_Size() int {
	return xxx_messageInfo_GetReply.Size(m)
}
func (m *GetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetReply proto.InternalMessageInfo

func (m *GetReply) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*ID)(nil), "pb.ID")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*FindReply)(nil), "pb.FindReply")
	proto.RegisterType((*GetReply)(nil), "pb.GetReply")
}

func init() { proto.RegisterFile("ordersvc.proto", fileDescriptor_c11b3307f9b338e4) }

var fileDescriptor_c11b3307f9b338e4 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xdf, 0x6a, 0xf2, 0x40,
	0x10, 0xc5, 0xc9, 0xe6, 0xcf, 0xa7, 0xf3, 0xd5, 0x5e, 0x0c, 0x45, 0x42, 0x2c, 0x25, 0xec, 0x55,
	0x68, 0xe9, 0x0a, 0xfa, 0x0a, 0x5a, 0xf1, 0x76, 0x8b, 0x0f, 0x60, 0x92, 0xa9, 0x04, 0x34, 0xbb,
	0x6c, 0xa2, 0xe0, 0xdb, 0x97, 0xd9, 0x28, 0x2d, 0xbd, 0x9a, 0x99, 0x1f, 0x67, 0xce, 0xcc, 0x81,
	0xc9, 0xb9, 0x23, 0xd7, 0x5d, 0x2a, 0x65, 0x9d, 0xe9, 0x0d, 0x0a, 0x5b, 0x66, 0xb3, 0x83, 0x31,
	0x87, 0x23, 0xcd, 0x3d, 0x29, 0xcf, 0x5f, 0x73, 0x3a, 0xd9, 0xfe, 0x3a, 0x08, 0xe4, 0x12, 0xe2,
	0xb5, 0x73, 0xc6, 0x21, 0x42, 0x54, 0x99, 0x9a, 0xd2, 0x20, 0x0f, 0x8a, 0x58, 0xfb, 0x1e, 0xa7,
	0x90, 0x38, 0xda, 0x77, 0xa6, 0x4d, 0x45, 0x1e, 0x14, 0x63, 0x7d, 0x9b, 0xe4, 0x13, 0x88, 0xed,
	0x0a, 0x1f, 0x41, 0x34, 0xb5, 0xd7, 0x87, 0x5a, 0x34, 0xb5, 0x7c, 0x85, 0x68, 0xd7, 0x91, 0xfb,
	0xcb, 0xd9, 0xb9, 0xdd, 0x9f, 0xe8, 0xe6, 0xe1, 0x7b, 0xf9, 0x06, 0xe3, 0x8f, 0xa6, 0xad, 0x35,
	0xd9, 0xe3, 0x15, 0x5f, 0x20, 0xf6, 0x5f, 0xa7, 0x41, 0x1e, 0x16, 0xff, 0x17, 0x23, 0x65, 0x4b,
	0xc5, 0x4e, 0x7a, 0xc0, 0xb2, 0x80, 0xd1, 0x86, 0xfa, 0x41, 0xfb, 0x0c, 0x11, 0x43, 0x6f, 0xff,
	0x5b, 0xea, 0xe9, 0x62, 0x07, 0xff, 0x78, 0xfa, 0xbc, 0x54, 0xf8, 0x0e, 0x11, 0x5f, 0xc0, 0xa9,
	0x1a, 0xe2, 0xab, 0x7b, 0x7c, 0xb5, 0xe6, 0xf8, 0xd9, 0x84, 0x57, 0x7f, 0x7e, 0x98, 0x41, 0xb8,
	0xa1, 0x1e, 0x13, 0xa6, 0xdb, 0x55, 0xf6, 0xc0, 0xf5, 0x7e, 0xb4, 0x4c, 0xfc, 0xee, 0xf2, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0x80, 0x97, 0x73, 0x3b, 0x5d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserSvcClient is the client API for UserSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserSvcClient interface {
	Find(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FindReply, error)
	Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetReply, error)
}

type userSvcClient struct {
	cc *grpc.ClientConn
}

func NewUserSvcClient(cc *grpc.ClientConn) UserSvcClient {
	return &userSvcClient{cc}
}

func (c *userSvcClient) Find(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FindReply, error) {
	out := new(FindReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserSvcServer is the server API for UserSvc service.
type UserSvcServer interface {
	Find(context.Context, *empty.Empty) (*FindReply, error)
	Get(context.Context, *ID) (*GetReply, error)
}

// UnimplementedUserSvcServer can be embedded to have forward compatible implementations.
type UnimplementedUserSvcServer struct {
}

func (*UnimplementedUserSvcServer) Find(ctx context.Context, req *empty.Empty) (*FindReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}
func (*UnimplementedUserSvcServer) Get(ctx context.Context, req *ID) (*GetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterUserSvcServer(s *grpc.Server, srv UserSvcServer) {
	s.RegisterService(&_UserSvc_serviceDesc, srv)
}

func _UserSvc_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).Find(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).Get(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserSvc",
	HandlerType: (*UserSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Find",
			Handler:    _UserSvc_Find_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserSvc_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ordersvc.proto",
}
